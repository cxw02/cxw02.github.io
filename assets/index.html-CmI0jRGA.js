import{_ as s,c as a,e,o as h}from"./app-GmUcdabo.js";const t={};function n(l,i){return h(),a("div",null,i[0]||(i[0]=[e(`<p>在使用 Git 进行代码管理时，可能会遇到“Failed to connect to github.com port 443 after 2295 ms: Couldn&#39;t connect to server”这种连接失败的错误提示。这个问题常常与网络配置、代理设置或 VPN 环境的干扰有关。本文将为你提供在使用 VPN 和未使用 VPN 时的不同解决方案，帮助你快速定位并解决问题。</p><h2 id="一、使用-vpn-环境下的解决方案" tabindex="-1"><a class="header-anchor" href="#一、使用-vpn-环境下的解决方案"><span>一、使用 VPN 环境下的解决方案</span></a></h2><p>当你处于 VPN 环境下时，GitHub 连接失败往往是由于代理服务器与 Git 配置不一致导致的。具体表现为 Git 在尝试通过代理访问 GitHub 时失败，或者代理的端口不正确。以下是针对该情况的解决步骤：</p><h3 id="_1-检查当前代理设置" tabindex="-1"><a class="header-anchor" href="#_1-检查当前代理设置"><span>1. 检查当前代理设置</span></a></h3><p>打开 设置 &gt; 网络与互联网 &gt; 代理，找到代理设置，并记录当前代理端口。假设端口号为<mark class="note">7890</mark>。</p><h3 id="_2-配置-git-使用代理" tabindex="-1"><a class="header-anchor" href="#_2-配置-git-使用代理"><span>2. 配置 Git 使用代理</span></a></h3><p>确保 Git 使用与系统代理设置相同的端口。可以通过以下命令配置 Git 的代理：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes github-light github-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.proxy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:7890</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https.proxy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:7890</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你的代理端口号是<mark>7890</mark>，那么命令就如上所示。这样，Git 会通过该代理访问 GitHub，确保网络请求能够顺利传输。</p><h3 id="_3-验证代理设置是否生效" tabindex="-1"><a class="header-anchor" href="#_3-验证代理设置是否生效"><span>3. 验证代理设置是否生效</span></a></h3><p>在配置完成后，你可以使用以下命令验证代理设置是否正确：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes github-light github-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将列出当前的 Git 配置信息，确保其中的 <code>http.proxy</code> 和 <code>https.proxy</code> 设置为你刚刚配置的端口。</p><h3 id="_4-刷新-dns-缓存" tabindex="-1"><a class="header-anchor" href="#_4-刷新-dns-缓存"><span>4. 刷新 DNS 缓存</span></a></h3><p>有时 DNS 缓存可能会导致连接问题。在执行 Git 操作前，建议刷新系统的 DNS 缓存：</p><ul><li>Windows 用户：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes github-light github-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ipconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /flushdns</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Mac 用户：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes github-light github-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dscacheutil</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -flushcache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> killall</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -HUP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mDNSResponder</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>刷新 DNS 缓存后，重新进行 Git 操作，看是否能够正常连接到 GitHub。</p><h3 id="_5-重新尝试-git-操作" tabindex="-1"><a class="header-anchor" href="#_5-重新尝试-git-操作"><span>5. 重新尝试 Git 操作</span></a></h3><p>在完成上述步骤后，尝试执行 <code>git push</code> 或 <code>git pull</code> 等 Git 命令，看看是否能成功连接并操作 GitHub。如果问题仍然存在，请检查网络连接是否稳定，或者尝试更换 VPN 服务器。</p><h2 id="二、未使用-vpn-环境下的解决方案" tabindex="-1"><a class="header-anchor" href="#二、未使用-vpn-环境下的解决方案"><span>二、未使用 VPN 环境下的解决方案</span></a></h2><p>如果你并未使用 VPN，但仍然遇到连接 GitHub 端口 443 失败的问题，那么可能是 Git 配置了代理，但实际并不需要。你可以按照以下步骤解决该问题：</p><h3 id="_1-取消-git-配置的代理" tabindex="-1"><a class="header-anchor" href="#_1-取消-git-配置的代理"><span>1. 取消 Git 配置的代理</span></a></h3><p>如果 Git 配置了代理，而你并不需要它，或者你的网络环境不适合使用代理，那么需要取消 Git 的代理设置。使用以下命令取消代理：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes github-light github-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --unset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --unset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https.proxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这两条命令将移除所有全局代理设置，恢复 Git 的默认直连模式。</p><h3 id="_2-验证代理设置已成功移除" tabindex="-1"><a class="header-anchor" href="#_2-验证代理设置已成功移除"><span>2. 验证代理设置已成功移除</span></a></h3><p>通过以下命令检查代理是否已经被成功移除：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes github-light github-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果没有显示 <code>http.proxy</code> 和 <code>https.proxy</code> 相关的条目，说明代理已经被成功移除。</p><h3 id="_3-重试-git-操作" tabindex="-1"><a class="header-anchor" href="#_3-重试-git-操作"><span>3. 重试 Git 操作</span></a></h3><p>取消代理设置后，重新执行 Git 操作，看看是否可以顺利连接到 GitHub。如果问题依然存在，建议检查本地网络连接，确保没有防火墙或其他网络配置阻止了端口 443 的访问。</p><h2 id="三、总结" tabindex="-1"><a class="header-anchor" href="#三、总结"><span>三、总结</span></a></h2><p>GitHub 端口 443 连接失败的问题可能是由多种原因造成的，特别是在 VPN 环境下，代理设置和网络配置可能会干扰 Git 的正常连接。针对不同的网络环境，以下是两种常见的解决方案：</p><h3 id="使用-vpn-的解决方案" tabindex="-1"><a class="header-anchor" href="#使用-vpn-的解决方案"><span>使用 VPN 的解决方案：</span></a></h3><ul><li>检查并确认系统的代理端口（例如端口<mark>7890</mark>）。</li><li>配置 Git 使用该代理端口。</li><li>刷新 DNS 缓存以确保网络连接通畅。</li></ul><h3 id="未使用-vpn-的解决方案" tabindex="-1"><a class="header-anchor" href="#未使用-vpn-的解决方案"><span>未使用 VPN 的解决方案：</span></a></h3><ul><li>取消 Git 配置中的代理设置，恢复默认直连模式。</li><li>检查代理设置是否已移除。</li><li>重试 Git 操作，确认是否恢复正常。</li></ul><p>通过这两种方法，你可以根据实际情况来解决 GitHub 连接失败的问题。希望本文能为你提供有效的帮助，使你的 Git 使用更加顺畅。</p>`,41)]))}const p=s(t,[["render",n]]),r=JSON.parse('{"path":"/article/wtvkv132/","title":"【Git】GitHub 连接失败解决方案","lang":"zh-CN","frontmatter":{"title":"【Git】GitHub 连接失败解决方案","createTime":"2025/05/11 22:54:25","permalink":"/article/wtvkv132/","tags":["git","github"],"copyright":{"creation":"reprint","license":"CC-BY-4.0","source":"https://blog.csdn.net/lph159/article/details/143783520","author":{"name":"Peter-Luna","url":"https://blog.csdn.net/lph159?type=blog"}}},"readingTime":{"minutes":3.74,"words":1121},"git":{},"filePathRelative":"blog/【Git】GitHub 连接失败解决方案.md","headers":[],"categoryList":[{"id":"126ac9","sort":10000,"name":"blog"}]}');export{p as comp,r as data};
